import{_ as d,c as t,o as s,ae as i}from"./chunks/framework.DNNxon85.js";const e="/rbq10_docs/assets/hardware-communication-system.fVM-e0bt.png",n="/rbq10_docs/assets/gait-transition.2bHO3y84.png",k=JSON.parse('{"title":"ROS","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"manual/software-ros.md","filePath":"manual/software-ros.md"}'),r={name:"manual/software-ros.md"};function h(l,a,o,p,f,v){return s(),t("div",null,a[0]||(a[0]=[i(`<h1 id="ros" tabindex="-1" data-v-55fddd57>ROS <a class="header-anchor" href="#ros" aria-label="Permalink to &quot;ROS&quot;" data-v-55fddd57>​</a></h1><h2 id="prerequisites" tabindex="-1" data-v-55fddd57>🔨 Prerequisites <a class="header-anchor" href="#prerequisites" aria-label="Permalink to &quot;:hammer: Prerequisites&quot;" data-v-55fddd57>​</a></h2><ul data-v-55fddd57><li data-v-55fddd57>Supported OS: Ubuntu 22.04</li><li data-v-55fddd57>ROS Version: ROS2 HUMBLE</li></ul><h2 id="installation" tabindex="-1" data-v-55fddd57>📥 Installation <a class="header-anchor" href="#installation" aria-label="Permalink to &quot;:inbox_tray: Installation&quot;" data-v-55fddd57>​</a></h2><p data-v-55fddd57>In your ROS 2 workspace <code data-v-55fddd57>src</code> directory, clone the repository:</p><div class="language-bash vp-adaptive-theme" data-v-55fddd57><button title="Copy Code" class="copy" data-v-55fddd57></button><span class="lang" data-v-55fddd57>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-55fddd57><code data-v-55fddd57><span class="line" data-v-55fddd57><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-55fddd57>git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> https://github.com/palwanishan/rbq_ros2.git</span></span></code></pre></div><p data-v-55fddd57>and initialize and install the submodules:</p><div class="language-bash vp-adaptive-theme" data-v-55fddd57><button title="Copy Code" class="copy" data-v-55fddd57></button><span class="lang" data-v-55fddd57>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-55fddd57><code data-v-55fddd57><span class="line" data-v-55fddd57><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-55fddd57>cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> rbq_ros2</span></span>
<span class="line" data-v-55fddd57><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-55fddd57>git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> init</span></span>
<span class="line" data-v-55fddd57><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-55fddd57>git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> submodule</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> update</span></span></code></pre></div><p data-v-55fddd57>From here, build and source the ROS 2 workspace:</p><div class="language-bash vp-adaptive-theme" data-v-55fddd57><button title="Copy Code" class="copy" data-v-55fddd57></button><span class="lang" data-v-55fddd57>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-55fddd57><code data-v-55fddd57><span class="line" data-v-55fddd57><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-55fddd57>sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> init</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-55fddd57> &amp;&amp; </span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-55fddd57>rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> update</span></span>
<span class="line" data-v-55fddd57><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-55fddd57>cd</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-55fddd57> &lt;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57>ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> w</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;" data-v-55fddd57>s</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;" data-v-55fddd57>&gt;</span></span>
<span class="line" data-v-55fddd57><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-55fddd57>source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> /opt/ros/humble/setup.bash</span></span>
<span class="line" data-v-55fddd57><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-55fddd57>rosdep</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> install</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-55fddd57> --from-paths</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> src</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-55fddd57> -y</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-55fddd57> --ignore-src</span></span>
<span class="line" data-v-55fddd57><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-55fddd57>colcon</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> build</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-55fddd57> --symlink-install</span></span>
<span class="line" data-v-55fddd57><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-55fddd57>source</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> install/local_setup.bash</span></span></code></pre></div><h2 id="rbq-ros2-driver" tabindex="-1" data-v-55fddd57>💽 RBQ ROS2 Driver <a class="header-anchor" href="#rbq-ros2-driver" aria-label="Permalink to &quot;:minidisc: RBQ ROS2 Driver&quot;" data-v-55fddd57>​</a></h2><p data-v-55fddd57>The RBQ driver contains all of the necessary topics, services, and actions for controlling RBQ over ROS2. To launch the driver, run:</p><div class="language-bash vp-adaptive-theme" data-v-55fddd57><button title="Copy Code" class="copy" data-v-55fddd57></button><span class="lang" data-v-55fddd57>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-55fddd57><code data-v-55fddd57><span class="line" data-v-55fddd57><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-55fddd57>ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> run</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> rbq_driver</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> rbq_driver</span></span></code></pre></div><p data-v-55fddd57>To launch the rviz2, run:</p><div class="language-bash vp-adaptive-theme" data-v-55fddd57><button title="Copy Code" class="copy" data-v-55fddd57></button><span class="lang" data-v-55fddd57>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-55fddd57><code data-v-55fddd57><span class="line" data-v-55fddd57><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-55fddd57>ros2</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> launch</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> rbq_description</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-55fddd57> description.launch.py</span></span></code></pre></div><h3 id="configuration" tabindex="-1" data-v-55fddd57>Configuration <a class="header-anchor" href="#configuration" aria-label="Permalink to &quot;Configuration&quot;" data-v-55fddd57>​</a></h3><p data-v-55fddd57>Connect to Robot&#39;s ssid.</p><h2 id="rbq10-urdf" tabindex="-1" data-v-55fddd57>🐕 RBQ10 URDF <a class="header-anchor" href="#rbq10-urdf" aria-label="Permalink to &quot;:dog2: RBQ10 URDF&quot;" data-v-55fddd57>​</a></h2><h2 id="hardware-communication-system" tabindex="-1" data-v-55fddd57>📡 Hardware Communication System <a class="header-anchor" href="#hardware-communication-system" aria-label="Permalink to &quot;:satellite: Hardware Communication System&quot;" data-v-55fddd57>​</a></h2><figure data-v-55fddd57><img src="`+e+'" alt="missing" data-v-55fddd57><figcaption style="text-align:center;" data-v-55fddd57>[ Hardware Communication System ]</figcaption></figure><h2 id="gait-state-transition" tabindex="-1" data-v-55fddd57>🐾 Gait State Transition <a class="header-anchor" href="#gait-state-transition" aria-label="Permalink to &quot;:feet: Gait State Transition&quot;" data-v-55fddd57>​</a></h2><h3 id="gait-state" tabindex="-1" data-v-55fddd57>Gait State <a class="header-anchor" href="#gait-state" aria-label="Permalink to &quot;Gait State&quot;" data-v-55fddd57>​</a></h3><table data-v-55fddd57><tr data-v-55fddd57><th data-v-55fddd57>Gait State</th><th data-v-55fddd57>Control Off</th><th data-v-55fddd57>Fall Mode</th><th data-v-55fddd57>Sitting</th><th data-v-55fddd57>Standing Mode</th><th data-v-55fddd57>Walk Mode</th><th data-v-55fddd57>Stairs Mode</th><th data-v-55fddd57>Wave Mode</th><th data-v-55fddd57>Run Mode</th></tr><tr data-v-55fddd57><th data-v-55fddd57>No.</th><td data-v-55fddd57>-1</td><td data-v-55fddd57>-2</td><td data-v-55fddd57>0</td><td data-v-55fddd57>1</td><td data-v-55fddd57>2</td><td data-v-55fddd57>4</td><td data-v-55fddd57>5</td><td data-v-55fddd57>6</td></tr></table><h3 id="gait-state-transition-diagram" tabindex="-1" data-v-55fddd57>Gait State Transition Diagram <a class="header-anchor" href="#gait-state-transition-diagram" aria-label="Permalink to &quot;Gait State Transition Diagram&quot;" data-v-55fddd57>​</a></h3><figure data-v-55fddd57><img src="'+n+'" alt="missing" data-v-55fddd57><figcaption style="text-align:center;" data-v-55fddd57>[ Gait State Transition Diagram ]</figcaption></figure><h2 id="topics" tabindex="-1" data-v-55fddd57>💬 Topics <a class="header-anchor" href="#topics" aria-label="Permalink to &quot;:speech_balloon: Topics&quot;" data-v-55fddd57>​</a></h2><h3 id="command-topics" tabindex="-1" data-v-55fddd57>Command Topics <a class="header-anchor" href="#command-topics" aria-label="Permalink to &quot;Command Topics&quot;" data-v-55fddd57>​</a></h3><p data-v-55fddd57>Most of the commands integrated into RViz2&#39;s &quot;RBQ&quot; panel.</p><p data-v-55fddd57>Many simple robot commands can be called as services from the command line once the driver is running. For example:</p><h3 id="robot-state-topics" tabindex="-1" data-v-55fddd57>Robot State Topics <a class="header-anchor" href="#robot-state-topics" aria-label="Permalink to &quot;Robot State Topics&quot;" data-v-55fddd57>​</a></h3><h3 id="vision-sensor-topics" tabindex="-1" data-v-55fddd57>Vision Sensor Topics <a class="header-anchor" href="#vision-sensor-topics" aria-label="Permalink to &quot;Vision Sensor Topics&quot;" data-v-55fddd57>​</a></h3>',31)]))}const g=d(r,[["render",h],["__scopeId","data-v-55fddd57"]]);export{k as __pageData,g as default};
