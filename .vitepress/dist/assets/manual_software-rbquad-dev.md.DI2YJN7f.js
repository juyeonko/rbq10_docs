import{_ as e,c as t,o as i,ae as s}from"./chunks/framework.DNNxon85.js";const c="/rbq10_docs/assets/motion-shared-key.CmYzOZn4.png",d="/rbq10_docs/assets/wifi.ewgIc9Zb.png",o="/rbq10_docs/assets/ssh-access.CuslXkZQ.png",n="/rbq10_docs/assets/podolan.CfWI1Vln.png",l="/rbq10_docs/assets/tutorialal.CV99osdh.png",r="/rbq10_docs/assets/qt-creator.BbLBv92w.png",b="/rbq10_docs/assets/load-project.CT0ZXNLS.png",p="/rbq10_docs/assets/pro-open.gAMZeOKx.png",h="/rbq10_docs/assets/configure-project.7jFcjHl3.png",v="/rbq10_docs/assets/gui-run.D1N8DtJH.png",u="/rbq10_docs/assets/gui-connect.D8QmDQkh.png",g="/rbq10_docs/assets/gui-connected.BfN5lcqg.png",k="/rbq10_docs/assets/tutorial-test.CcLzfiec.png",m="/rbq10_docs/assets/gui-tutorialal-success.DUPTNtWJ.png",f="/rbq10_docs/assets/build1.CnxbYGqw.png",y="/rbq10_docs/assets/build2.Cq7xB_Zg.png",_="/rbq10_docs/assets/deploy-kill.COUHkGpQ.png",F="/rbq10_docs/assets/build-deploy-bash.CHv-rB4m.png",q="/rbq10_docs/assets/deploy-tutorialal.BpGHi78U.png",E=JSON.parse('{"title":"RBQuad-DEV","description":"","frontmatter":{"layout":"doc","outline":"deep"},"headers":[],"relativePath":"manual/software-rbquad-dev.md","filePath":"manual/software-rbquad-dev.md"}'),C={name:"manual/software-rbquad-dev.md"};function B(x,a,P,S,R,w){return i(),t("div",null,a[0]||(a[0]=[s(`<h1 id="rbquad-dev" tabindex="-1" data-v-b1277ce8>RBQuad-DEV <a class="header-anchor" href="#rbquad-dev" aria-label="Permalink to &quot;RBQuad-DEV&quot;" data-v-b1277ce8>​</a></h1><h2 id="quick-start" tabindex="-1" data-v-b1277ce8>Quick Start <a class="header-anchor" href="#quick-start" aria-label="Permalink to &quot;Quick Start&quot;" data-v-b1277ce8>​</a></h2><h3 id="ssh-access-to-rbq10" tabindex="-1" data-v-b1277ce8>SSH Access to RBQ10 <a class="header-anchor" href="#ssh-access-to-rbq10" aria-label="Permalink to &quot;SSH Access to RBQ10&quot;" data-v-b1277ce8>​</a></h3><h4 id="step-1-setup-rbquad-dev" tabindex="-1" data-v-b1277ce8>Step 1: Setup RBQuad_DEV <a class="header-anchor" href="#step-1-setup-rbquad-dev" aria-label="Permalink to &quot;Step 1: Setup RBQuad_DEV&quot;" data-v-b1277ce8>​</a></h4><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> rbq_ws</span></span>
<span class="line" data-v-b1277ce8><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b1277ce8>cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> rbq_ws</span></span>
<span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>git</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> clone</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> https://github.com/HyobinJeong/RBQuad_DEV.git</span></span></code></pre></div><h4 id="step-2-make-keys-directory" tabindex="-1" data-v-b1277ce8>Step 2: Make Keys Directory <a class="header-anchor" href="#step-2-make-keys-directory" aria-label="Permalink to &quot;Step 2: Make Keys Directory&quot;" data-v-b1277ce8>​</a></h4><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b1277ce8>cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> ~/rbq_ws/RBQuad_DEV</span></span>
<span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>mkdir</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> keys</span></span></code></pre></div><h4 id="step-3-setup-motion-shared-key" tabindex="-1" data-v-b1277ce8>Step 3: Setup <code data-v-b1277ce8>motion_shared_key</code> <a class="header-anchor" href="#step-3-setup-motion-shared-key" aria-label="Permalink to &quot;Step 3: Setup \`motion_shared_key\`&quot;" data-v-b1277ce8>​</a></h4><p data-v-b1277ce8>Place the <code data-v-b1277ce8>motion_shared_key</code> you received in <code data-v-b1277ce8>RBQuad_DEV/keys</code> folder.</p><figure data-v-b1277ce8><img src="`+c+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ motion_shared_key ]</figcaption></figure><h4 id="step-4-connect-to-robot-by-ssh" tabindex="-1" data-v-b1277ce8>Step 4: Connect to Robot by SSH <a class="header-anchor" href="#step-4-connect-to-robot-by-ssh" aria-label="Permalink to &quot;Step 4: Connect to Robot by SSH&quot;" data-v-b1277ce8>​</a></h4><ol data-v-b1277ce8><li data-v-b1277ce8>Select and connect SSID named <code data-v-b1277ce8>RBQ_{XX}</code> from Wi-Fi network of user PC.</li></ol><figure style="margin-left:150px;margin-right:150px;" data-v-b1277ce8><img src="'+d+`" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ RBQ_{XX} Wi-Fi ]</figcaption></figure><ol start="2" data-v-b1277ce8><li data-v-b1277ce8>Run <code data-v-b1277ce8>ssh.bash</code></li></ol><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b1277ce8>cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> ~/rbq_ws/RBQuad_DEV/scripts/</span></span>
<span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>./ssh.bash</span></span></code></pre></div><blockquote data-v-b1277ce8><p data-v-b1277ce8>💡 If SSH successfully connects to the robot, the username will change to <code data-v-b1277ce8>rbq@motion</code>.</p><figure data-v-b1277ce8><img src="`+o+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ SSH Connect Success ]</figcaption></figure></blockquote><h3 id="run-program" tabindex="-1" data-v-b1277ce8>Run Program <a class="header-anchor" href="#run-program" aria-label="Permalink to &quot;Run Program&quot;" data-v-b1277ce8>​</a></h3><h4 id="run-default-program-podolan" tabindex="-1" data-v-b1277ce8>Run Default Program <code data-v-b1277ce8>PODOLAN</code> <a class="header-anchor" href="#run-default-program-podolan" aria-label="Permalink to &quot;Run Default Program `PODOLAN`&quot;" data-v-b1277ce8>​</a></h4><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b1277ce8>cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> ~/rbq_ws/motion/bin/</span></span>\n<span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> ./PODOLAN</span></span></code></pre></div><blockquote data-v-b1277ce8><p data-v-b1277ce8>💡 If <code data-v-b1277ce8>PODOLAN</code> runs properly, <code data-v-b1277ce8>Daemon</code>, <code data-v-b1277ce8>QuadWalk</code> will run together automatically.</p><figure data-v-b1277ce8><img src="'+n+`" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ PODOLAN ]</figcaption></figure></blockquote><h4 id="run-tutorial-program" tabindex="-1" data-v-b1277ce8>Run Tutorial Program <a class="header-anchor" href="#run-tutorial-program" aria-label="Permalink to &quot;Run Tutorial Program&quot;" data-v-b1277ce8>​</a></h4><p data-v-b1277ce8>With <code data-v-b1277ce8>PODOLAN</code> running, open an additional terminal window to run <code data-v-b1277ce8>TutorialAL</code>.</p><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b1277ce8>cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> ~/rbq_ws/motion/bin/</span></span>
<span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> ./TutorialAL</span></span></code></pre></div><figure data-v-b1277ce8><img src="`+l+`" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ TutorialAL ]</figcaption></figure><h3 id="run-gui-with-qt-creator" tabindex="-1" data-v-b1277ce8>Run GUI with Qt Creator <a class="header-anchor" href="#run-gui-with-qt-creator" aria-label="Permalink to &quot;Run GUI with Qt Creator&quot;" data-v-b1277ce8>​</a></h3><h4 id="step-1-install-qt-creator" tabindex="-1" data-v-b1277ce8>Step 1: Install Qt Creator <a class="header-anchor" href="#step-1-install-qt-creator" aria-label="Permalink to &quot;Step 1: Install Qt Creator&quot;" data-v-b1277ce8>​</a></h4><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> update</span></span>
<span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> qtcreator</span></span></code></pre></div><h4 id="step-2-run-qt-creator" tabindex="-1" data-v-b1277ce8>Step 2: Run Qt Creator <a class="header-anchor" href="#step-2-run-qt-creator" aria-label="Permalink to &quot;Step 2: Run Qt Creator&quot;" data-v-b1277ce8>​</a></h4><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>qtcreator</span></span></code></pre></div><figure data-v-b1277ce8><img src="`+r+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ Qt Creator ]</figcaption></figure><h4 id="step-3-load-project" tabindex="-1" data-v-b1277ce8>Step 3: Load Project <a class="header-anchor" href="#step-3-load-project" aria-label="Permalink to &quot;Step 3: Load Project&quot;" data-v-b1277ce8>​</a></h4><ol data-v-b1277ce8><li data-v-b1277ce8>Go to <code data-v-b1277ce8>Edit</code> tab and select <code data-v-b1277ce8>Load Project...</code>.</li></ol><figure data-v-b1277ce8><img src="'+b+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ Load Project ]</figcaption></figure><ol start="2" data-v-b1277ce8><li data-v-b1277ce8>Open <code data-v-b1277ce8>RBQuad_DEV.pro</code> file in <code data-v-b1277ce8>~/rbq_ws/RBQuad_DEV/src</code> directory.</li></ol><figure data-v-b1277ce8><img src="'+p+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ RBQuad_DEV.pro ]</figcaption></figure><ol start="3" data-v-b1277ce8><li data-v-b1277ce8>At <b data-v-b1277ce8>Configure Project</b>, check only <code data-v-b1277ce8>Release</code> from <b data-v-b1277ce8>Desktop</b>, <br data-v-b1277ce8>type <code data-v-b1277ce8>../build</code> and click <code data-v-b1277ce8>Configure Project</code>.</li></ol><figure data-v-b1277ce8><img src="'+h+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ Configure Project ]</figcaption></figure><h4 id="step-4-run-gui" tabindex="-1" data-v-b1277ce8>Step 4: Run GUI <a class="header-anchor" href="#step-4-run-gui" aria-label="Permalink to &quot;Step 4: Run GUI&quot;" data-v-b1277ce8>​</a></h4><ol data-v-b1277ce8><li data-v-b1277ce8>Right-click GUI folder and select <code data-v-b1277ce8>Run</code>. After the project built, GUI will start.</li></ol><figure data-v-b1277ce8><img src="'+v+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ Run GUI ]</figcaption></figure><ol start="2" data-v-b1277ce8><li data-v-b1277ce8>By selecting <code data-v-b1277ce8>Connect</code> button in the launched GUI, the robot and GUI will be integrated.</li></ol><blockquote data-v-b1277ce8><p data-v-b1277ce8>💡 If properly connected, <code data-v-b1277ce8>LAN COM</code> status on GUI will turn to red.</p></blockquote><div class="image-group" data-v-b1277ce8><figure data-v-b1277ce8><img src="'+u+'" alt="missing" data-v-b1277ce8><figcaption data-v-b1277ce8>[ Connect button ]</figcaption></figure><figure data-v-b1277ce8><img src="'+g+'" alt="missing" data-v-b1277ce8><figcaption data-v-b1277ce8>[ Connected ]</figcaption></figure></div><h4 id="use-tutorialal-with-gui" tabindex="-1" data-v-b1277ce8>Use <code data-v-b1277ce8>TutorialAL</code> with GUI <a class="header-anchor" href="#use-tutorialal-with-gui" aria-label="Permalink to &quot;Use `TutorialAL` with GUI&quot;" data-v-b1277ce8>​</a></h4><ol data-v-b1277ce8><li data-v-b1277ce8>Run <code data-v-b1277ce8>TutorialAL</code>.</li></ol><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b1277ce8>cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> ~/rbq_ws/motion/bin/</span></span>\n<span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> ./TutorialAL</span></span></code></pre></div><ol start="2" data-v-b1277ce8><li data-v-b1277ce8>While running <code data-v-b1277ce8>TutorialAL</code>, select <code data-v-b1277ce8>Tutorial Test</code> button in GUI.</li></ol><figure data-v-b1277ce8><img src="'+k+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ Tutorial Test button ]</figcaption></figure><blockquote data-v-b1277ce8><p data-v-b1277ce8>💡 If message <code data-v-b1277ce8>CMD TutorialAL_COMMAND_TEST Received</code> is displayed in the terminal, the execution of <code data-v-b1277ce8>TutorialAL</code> and the integration with GUI have been successfully completed.</p><figure data-v-b1277ce8><img src="'+m+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ TutorialAL GUI Connect Success ]</figcaption></figure></blockquote><h3 id="build-and-deploy" tabindex="-1" data-v-b1277ce8>Build and Deploy <a class="header-anchor" href="#build-and-deploy" aria-label="Permalink to &quot;Build and Deploy&quot;" data-v-b1277ce8>​</a></h3><h4 id="build" tabindex="-1" data-v-b1277ce8>Build <a class="header-anchor" href="#build" aria-label="Permalink to &quot;Build&quot;" data-v-b1277ce8>​</a></h4><ol data-v-b1277ce8><li data-v-b1277ce8>Modify header and source files of <code data-v-b1277ce8>TutorialAL</code> in Qt Creator on user PC.</li></ol><figure data-v-b1277ce8><img src="'+f+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ Modify TutorialAL ]</figcaption></figure><ol start="2" data-v-b1277ce8><li data-v-b1277ce8>Build <code data-v-b1277ce8>TutorialAL</code> Project.</li></ol><figure data-v-b1277ce8><img src="'+y+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ Build TutorialAL ]</figcaption></figure><h4 id="deploy" tabindex="-1" data-v-b1277ce8>Deploy <a class="header-anchor" href="#deploy" aria-label="Permalink to &quot;Deploy&quot;" data-v-b1277ce8>​</a></h4><p data-v-b1277ce8>By running <code data-v-b1277ce8>build_deploy.bash</code> script in <code data-v-b1277ce8>~/rbq_ws/RBQuad_DEV/scripts</code> directory, the newly built executable files will be copied to the robot PC.</p><blockquote data-v-b1277ce8><p data-v-b1277ce8>⚠️ <code data-v-b1277ce8>build_deploy.bash</code> must be runned only after terminating <code data-v-b1277ce8>TutorialAL</code>. <br data-v-b1277ce8>If you attempt to deploy while <code data-v-b1277ce8>TutorialAL</code> is running, the copy process may not be completed successfully.</p></blockquote><ol start="0" data-v-b1277ce8><li data-v-b1277ce8>If <code data-v-b1277ce8>TutorialAL</code> is running, terminate the program.</li></ol><figure data-v-b1277ce8><img src="'+_+`" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ Kill TutorialAL ]</figcaption></figure><ol data-v-b1277ce8><li data-v-b1277ce8>Run <code data-v-b1277ce8>build_deploy.bash</code>.</li></ol><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;" data-v-b1277ce8>cd</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> ~/rbq_ws/RBQuad_DEV/scripts</span></span>
<span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>./build_deploy.bash</span></span></code></pre></div><figure data-v-b1277ce8><img src="`+F+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ build_deploy.bash ]</figcaption></figure><blockquote data-v-b1277ce8><p data-v-b1277ce8>⚠️ If error related to <code data-v-b1277ce8>-lxcb-xinerama</code> occurs, install following package.</p></blockquote><div class="language-bash vp-adaptive-theme" data-v-b1277ce8><button title="Copy Code" class="copy" data-v-b1277ce8></button><span class="lang" data-v-b1277ce8>bash</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0" data-v-b1277ce8><code data-v-b1277ce8><span class="line" data-v-b1277ce8><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;" data-v-b1277ce8>sudo</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> apt</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> install</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;" data-v-b1277ce8> libxcb-xinerama0-dev</span></span></code></pre></div><ol data-v-b1277ce8><li data-v-b1277ce8>Rerun <code data-v-b1277ce8>TutorialAL</code>.</li></ol><blockquote data-v-b1277ce8><p data-v-b1277ce8>💡 By selecting <code data-v-b1277ce8>Tutorial Test</code> button in GUI, the modified content will be reflected.</p><figure data-v-b1277ce8><img src="'+q+'" alt="missing" data-v-b1277ce8><figcaption style="text-align:center;" data-v-b1277ce8>[ New TutorialAL ]</figcaption></figure></blockquote>',67)]))}const T=e(C,[["render",B],["__scopeId","data-v-b1277ce8"]]);export{E as __pageData,T as default};
